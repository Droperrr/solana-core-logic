#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è 015: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü—É group_task_status
–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è progress_percent –∏ current_step_description –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
"""

import sqlite3
import sys
import logging

logger = logging.getLogger("migration_015")

def upgrade(conn):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü—É group_task_status
    """
    cursor = conn.cursor()
    
    print("üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ 015: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    cursor.execute("PRAGMA table_info(group_task_status)")
    columns = [row[1] for row in cursor.fetchall()]
    
    if 'progress_percent' not in columns:
        print("üìã –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è progress_percent...")
        cursor.execute("""
            ALTER TABLE group_task_status 
            ADD COLUMN progress_percent REAL DEFAULT 0.0
        """)
        print("‚úÖ –ü–æ–ª–µ progress_percent –¥–æ–±–∞–≤–ª–µ–Ω–æ")
    else:
        print("‚úÖ –ü–æ–ª–µ progress_percent —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    if 'current_step_description' not in columns:
        print("üìã –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è current_step_description...")
        cursor.execute("""
            ALTER TABLE group_task_status 
            ADD COLUMN current_step_description TEXT
        """)
        print("‚úÖ –ü–æ–ª–µ current_step_description –¥–æ–±–∞–≤–ª–µ–Ω–æ")
    else:
        print("‚úÖ –ü–æ–ª–µ current_step_description —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è progress_percent –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    cursor.execute("CREATE INDEX IF NOT EXISTS idx_group_progress ON group_task_status(progress_percent);")
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è progress_percent —Å–æ–∑–¥–∞–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print("\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã group_task_status:")
    cursor.execute("PRAGMA table_info(group_task_status)")
    for row in cursor.fetchall():
        print(f"  - {row[1]}: {row[2]} (nullable: {not row[3]})")
    
    conn.commit()
    print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è 015 —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")

def downgrade(conn):
    """
    –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ (—É–¥–∞–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π)
    –í–ù–ò–ú–ê–ù–ò–ï: SQLite –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç DROP COLUMN –Ω–∞–ø—Ä—è–º—É—é
    """
    cursor = conn.cursor()
    
    print("üîÑ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ 015...")
    print("‚ö†Ô∏è  SQLite –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç DROP COLUMN")
    print("‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–∫–∞—Ç–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã")
    
    # –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–Ω–¥–µ–∫—Å
    cursor.execute("DROP INDEX IF EXISTS idx_group_progress;")
    
    conn.commit()
    print("‚úÖ –ß–∞—Å—Ç–∏—á–Ω—ã–π –æ—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ 015 –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(level=logging.INFO)
    
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = sys.argv[1] if len(sys.argv) > 1 else "solana_db.sqlite"
    print(f"üéØ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫: {db_path}")
    
    try:
        conn = sqlite3.connect(db_path)
        upgrade(conn)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ 015: {e}")
        raise
    finally:
        if 'conn' in locals():
            conn.close() 