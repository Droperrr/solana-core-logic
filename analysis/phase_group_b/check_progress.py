#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ì—Ä—É–ø–ø—ã –ë
"""

import os
import sys
import sqlite3
from datetime import datetime

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

def check_group_b_progress():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ì—Ä—É–ø–ø—ã –ë"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã
    try:
        with open("data/group_b_tokens.txt", 'r') as f:
            tokens = [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª data/group_b_tokens.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è {len(tokens)} —Ç–æ–∫–µ–Ω–æ–≤ –ì—Ä—É–ø–ø—ã –ë...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ë–î
    if not os.path.exists("solana_db.sqlite"):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö solana_db.sqlite –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("üí° –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª—Å—è")
        return
    
    conn = sqlite3.connect("solana_db.sqlite")
    cursor = conn.cursor()
    
    print("\n" + "="*60)
    print("üìä –°–¢–ê–¢–£–° –°–ë–û–†–ê –î–ê–ù–ù–´–• –ì–†–£–ü–ü–´ –ë")
    print("="*60)
    
    tokens_with_data = 0
    total_transactions = 0
    total_events = 0
    
    for i, token in enumerate(tokens, 1):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        cursor.execute("""
            SELECT COUNT(*) FROM transactions 
            WHERE token_a_mint = ? OR token_b_mint = ?
        """, (token, token))
        tx_count = cursor.fetchone()[0]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º enriched —Å–æ–±—ã—Ç–∏—è
        cursor.execute("""
            SELECT COUNT(*) FROM ml_ready_events 
            WHERE token_a_mint = ? OR token_b_mint = ?
        """, (token, token))
        event_count = cursor.fetchone()[0]
        
        if tx_count > 0:
            tokens_with_data += 1
            total_transactions += tx_count
            total_events += event_count
            status = "‚úÖ –°–û–ë–†–ê–ù–û"
        else:
            status = "‚è≥ –û–ñ–ò–î–ê–ù–ò–ï"
        
        token_short = f"{token[:8]}...{token[-8:]}"
        print(f"{i:2d}. {token_short} | {status} | TX: {tx_count:4d} | Events: {event_count:4d}")
    
    print("="*60)
    print(f"üìà –ò–¢–û–ì–û:")
    print(f"   –¢–æ–∫–µ–Ω–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏: {tokens_with_data}/{len(tokens)} ({tokens_with_data/len(tokens)*100:.1f}%)")
    print(f"   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {total_transactions:,}")
    print(f"   –û–±–æ–≥–∞—â–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π: {total_events:,}")
    
    if tokens_with_data == 0:
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª—Å—è –∏–ª–∏ –∑–∞–≤–∏—Å.")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/batch_process_all_tokens.py --tokens-file data/group_b_tokens.txt")
    elif tokens_with_data < len(tokens):
        print(f"\n‚öôÔ∏è –°–¢–ê–¢–£–°: –°–±–æ—Ä –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ({tokens_with_data}/{len(tokens)} –∑–∞–≤–µ—Ä—à–µ–Ω–æ)")
        print("   –û–∂–∏–¥–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∞")
    else:
        print(f"\nüéâ –°–¢–ê–¢–£–°: –°–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("   –ì–æ—Ç–æ–≤–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: python analysis/phase_group_b/validate_entry_pattern.py")
    
    print("="*60)
    
    conn.close()

if __name__ == "__main__":
    check_group_b_progress() 